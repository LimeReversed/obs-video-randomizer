import inspectimport obspython as obsclass Source(object):	def __init__(self, source_name):		self.source_name = source_name	def __enter__(self):		self.source = obs.obs_get_source_by_name(self.source_name)		return self.source	def __exit__(self, *args):		if self.source:			obs.obs_source_release(self.source)	@staticmethod	def get_current_scene_name():		current_scene = obs.obs_frontend_get_current_scene()		current_scene_name = obs.obs_source_get_name(current_scene)		obs.obs_source_release(current_scene)		return current_scene_nameclass SourceSettings(object):	def __init__(self, source):		self.source = source	def __enter__(self):		self.settings = obs.obs_source_get_settings(self.source)		return self.settings	def __exit__(self, *args):		if self.settings:			obs.obs_data_release(self.settings)def inspect_object(obj):	for name, data in inspect.getmembers(obj):		if not name.startswith('__'):			print(f"{name}: {data}")